"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9933],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(g,s(s({ref:t},l),{},{components:r})):n.createElement(g,s({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8188:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},s="Store",i={unversionedId:"basic_concepts/store",id:"basic_concepts/store",title:"Store",description:"A store is a container for states. Store implements and encapsulates everything you need to easily manage your states including store.setState, store.getState, store.useState, store.subscribe and other functionalities. A store is created by using createStore API as",source:"@site/docs/basic_concepts/store.md",sourceDirName:"basic_concepts",slug:"/basic_concepts/store",permalink:"/state-pool/docs/basic_concepts/store",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basic_concepts/store.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/state-pool/docs/introduction/getting_started"},next:{title:"Using Store State",permalink:"/state-pool/docs/basic_concepts/using_store_state"}},c={},p=[{value:"Adding states to a store",id:"adding-states-to-a-store",level:2}],l={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"store"},"Store"),(0,a.kt)("p",null,"A store is a container for states. Store implements and encapsulates everything you need to easily manage your states including ",(0,a.kt)("inlineCode",{parentName:"p"},"store.setState"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"store.getState"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"store.useState"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"store.subscribe")," and other functionalities. A store is created by using ",(0,a.kt)("inlineCode",{parentName:"p"},"createStore")," API as "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createStore } from 'state-pool';\n\nconst store = createStore();\n")),(0,a.kt)("h2",{id:"adding-states-to-a-store"},"Adding states to a store"),(0,a.kt)("p",null,"Since a store is just a container for our state, we would eventually need to add states to it. Store provides ",(0,a.kt)("inlineCode",{parentName:"p"},"store.setState")," API which is used to create a state and add it to a store by mapping it to a key. ",(0,a.kt)("inlineCode",{parentName:"p"},"store.setState")," takes two required parameters, a key(string) to map to a state object and the initial value, In addition to those two parameters it takes a third optional parameter which is the configuration object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Signature\nstore.setState(key: String, initialState: Any, config?: {persist: Boolean})\n")),(0,a.kt)("p",null,"Here is an example showing how to use ",(0,a.kt)("inlineCode",{parentName:"p"},"store.setState")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'store.setState("count", 0);\n')),(0,a.kt)("br",null),(0,a.kt)("p",null,"Another way to add state in a store is using ",(0,a.kt)("inlineCode",{parentName:"p"},"createStore"),", in this way we're creating a store and initializing it at the same time. i.e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createStore } from 'state-pool';\n\nconst store = createStore({\"count\": 0});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// createStore Signature\ncreateStore({key1: stateValue1, key1, stateValue2, ...})\n")),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"store.setState")," should be used outside of a react component to make sure that it's executed only once. If you use it inside a react component make sure it's executed only once in order to avoid overriding state in a store.")))}u.isMDXComponent=!0}}]);